services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    # image: lucasgiovanella/tf-backend:1.0
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "8001:8001"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      SERVER_PORT: ${SERVER_PORT}
      EMAIL_URL: ${EMAIL_URL}
      EMAIL_TOKEN: ${EMAIL_TOKEN}
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - public_files:/app/public

  frontend:
    # image: lucasgiovanella/tf-frontend:1.0
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    environment:
      SERVER_URL: ${SERVER_URL}
      EMAIL_URL: ${EMAIL_URL}
      EMAIL_TOKEN: ${EMAIL_TOKEN}
    expose:
      - "80"
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - public_files:/usr/share/nginx/html/public
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  public_files:
